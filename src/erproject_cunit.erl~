%%%-------------------------------------------------------------------
%%% @author Khashayar
%%% @copyright (C) 2013, Khashayar
%%% @doc
%%%
%%% @end
%%% Created : 25 Jul 2013 by Khashayar
%%%-------------------------------------------------------------------
-module(erproject_cunit).

-behaviour(gen_server).

%% API
-export([start_link/0]).

%% gen_server callbacks
-export([init/1, handle_call/3, handle_cast/2, handle_info/2,
	 terminate/2, code_change/3]).

-define(SERVER, ?MODULE). 


%%--------------------------------------------------------------------
start_link() ->
    gen_server:start_link({local, ?SERVER}, ?MODULE, [], []).


%%--------------------------------------------------------------------
init([]) ->
    State = erproject_funs:date_gen(calendar:universal_time()),
    io:format("SPAWN~n",[]),
    {ok, tl(State)}.


%%--------------------------------------------------------------------
handle_call(_Request, _From, State) ->
    Reply = ok,
    {reply, Reply, State}.


%%--------------------------------------------------------------------
handle_cast({next, Url}, State) ->
    io:format("SPAWN~n",[]),
    {noreply, State};
handle_cast(last, []) ->
    State = erproject_funs:date_gen(calendar:universal_time()),
    io:format("SPAWN~n",[]),
    {noreply, tl(State)};
handle_cast(last, State) ->
    io:format("SPAWN~n",[]),
    {noreply, tl(State)};
handle_cast({submit, Data}, State) ->
    io:format("write Data~n",[]),
    {noreply, State};
handle_cast({error,Reason},[]) ->
    State = erproject_funs:date_gen(calendar:universal_time()),
    io:format("SPAWN~n",[]),
    {noreply, tl(State)};
handle_cast({error,Reason},State) ->
    io:format("SPAWN~n",[]),
    {noreply, tl(State)};
handle_cast(_,State) ->
    {noreply, State}.



%%--------------------------------------------------------------------
handle_info(_Info, State) ->
    {noreply, State}.

terminate(_Reason, _State) ->
    ok.
code_change(_OldVsn, State, _Extra) ->
    {ok, State}.


%% Internal functions
%%--------------------------------------------------------------------
